buildscript {
    ext.kotlin_version = '1.6.0'
    ext.http4k_version = '3.251.0'
    ext.kotlin_loggin_version = '1.7.8'
    ext.logback_version = '1.2.3'
    ext.log4j_version = '1.7.25'
    ext.logstash_encoder_version = '6.3'
    ext.prometheus_version = '0.8.0'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'

    id 'application'
    id 'idea'

    id 'org.jmailen.kotlinter' version '3.2.0'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

group 'no.nav.sf.henvendelse.api.proxy'
version '0.1'

jar {
    manifest {
        attributes 'Main-Class': 'no.nav.sf.henvendelse.api.proxy.BootstrapKt'
    }
}

shadowJar {
    archiveBaseName = 'app'
    archiveClassifier = ''
}

application {
    mainClassName = 'no.nav.sf.henvendelse.api.proxy.BootstrapKt'
}

repositories {
    mavenCentral()
    jcenter()

    ["maven-release"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("githubPassword")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or githubPassword")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = 'x-access-token'
                password = token
            }
        }
    }
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    implementation "no.nav.security:token-validation-core:1.3.1"
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    implementation "com.google.code.gson:gson:2.8.6"
    implementation "org.json:json:20210307"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"

    implementation "org.http4k:http4k-core:$http4k_version"
    implementation "org.http4k:http4k-client-apache:$http4k_version"
    implementation "org.http4k:http4k-server-apache:$http4k_version"

    implementation "io.github.microutils:kotlin-logging:$kotlin_loggin_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "net.logstash.logback:logstash-logback-encoder:$logstash_encoder_version"

    implementation "io.prometheus:simpleclient_common:$prometheus_version"
    implementation "io.prometheus:simpleclient_hotspot:$prometheus_version"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.mockk:mockk:1.12.0'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}